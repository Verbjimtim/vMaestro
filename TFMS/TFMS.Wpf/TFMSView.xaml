<UserControl x:Class="TFMS.Wpf.TFMSView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TFMS.Wpf"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:controls="clr-namespace:TFMS.Wpf.Controls"
             xmlns:converters="clr-namespace:TFMS.Wpf.Converters"
             mc:Ignorable="d"
             Background="{x:Static local:Theme.BackgroundColor}"
             MinWidth="480"
             d:DataContext="{d:DesignInstance Type=local:TFMSViewModel}"
             d:DesignHeight="800"
             d:DesignWidth="560">
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger
            EventName="Loaded" 
            SourceObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}">
            <behaviors:InvokeCommandAction Command="{Binding LoadConfigurationCommand}"/>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/TFMS.Wpf;component/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:TotalSecondsConverter x:Key="TotalSecondsConverter"/>
            
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBaseStyle}" />
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}" />

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="16" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="22" />
            <RowDefinition Height="22"/>
            <RowDefinition Height="22" />
            <RowDefinition Height="*" />
            <RowDefinition Height="32" />
        </Grid.RowDefinitions>

        <!-- Unknown Buttons -->
        <!-- TODO: Not implemented -->
        <Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Button Grid.Row="0" Margin="0,0,0,1" IsEnabled="False">
                <controls:Chevron Direction="Left" />
            </Button>
            <Button Grid.Row="1" Margin="0,1,0,1" IsEnabled="False">
                <controls:Chevron Direction="Right" />
            </Button>
        </Grid>

        <!-- Header -->
        <controls:BeveledBorder 
            Grid.Column="1"
            Grid.Row="0"
            BevelType="Outline"
            BorderThickness="{x:Static local:Theme.BeveledBorderThickness}"
            Margin="2,0,2,0"
            Grid.RowSpan="2">

            <controls:BeveledBorder.Resources>
                <Style TargetType="{x:Type controls:BeveledLine}">
                    <Setter Property="Margin" Value="4,0,4,0" />
                </Style>
            </controls:BeveledBorder.Resources>

            <Grid Margin="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="72" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="56" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="72" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="72" />
                </Grid.ColumnDefinitions>

                <!-- Sector ID -->
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    TextWrapping="Wrap"
                    HorizontalAlignment="Center"
                    Style="{StaticResource MultiLineText}">
                        FLOW
                </TextBlock>

                <controls:BeveledLine Grid.Column="1" Width="{x:Static local:Theme.BeveledLineWidth}" Orientation="Vertical"/>

                <!-- Aerodrome Selector -->
                <ComboBox
                    Grid.Column="2"
                    Padding="5"
                    ItemsSource="{Binding Path=AvailableAirports, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding Path=SelectedAirport, UpdateSourceTrigger=PropertyChanged}"
                    DisplayMemberPath="Identifier" />

                <controls:BeveledLine Grid.Column="3" Width="{x:Static local:Theme.BeveledLineWidth}" Orientation="Vertical"/>

                <!-- Runway Selector -->
                <ComboBox
                    Grid.Column="4"
                    Padding="5"
                    ItemsSource="{Binding Path=SelectedAirport.RunwayModes}"
                    SelectedItem="{Binding Path=SelectedRunwayMode}"
                    DisplayMemberPath="Identifier" />

                <controls:BeveledLine Grid.Column="5" Width="{x:Static local:Theme.BeveledLineWidth}" Orientation="Vertical"/>

                <!-- Runway Intervals -->
                <controls:BeveledBorder Grid.Column="6" BorderThickness="{x:Static local:Theme.BeveledBorderThickness}" BevelType="Raised">
                    <ItemsControl ItemsSource="{Binding Path=SelectedRunwayMode.Runways}" VerticalAlignment="Center" Margin="2">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <DataTemplate.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource InteractiveTextStyle}"/>
                                </DataTemplate.Resources>
                                
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock x:Name="Separator" Text=" - " />
                                    <TextBlock Text="{Binding Identifier}"/>
                                    <TextBlock>:</TextBlock>
                                    <TextBlock Text="{Binding LandingRate, Converter={StaticResource TotalSecondsConverter}}"/>
                                </StackPanel>

                                <DataTemplate.Triggers>
                                    
                                    <!-- Hide the separator on the first iteration -->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                        <Setter Property="Visibility" TargetName="Separator" Value="Collapsed"/>
                                    </DataTrigger>

                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </controls:BeveledBorder>

                <controls:BeveledLine
                    Grid.Column="7"
                    Width="{x:Static local:Theme.BeveledLineWidth}"
                    Orientation="Vertical" />

                <!-- Setup Button -->
                <Button Grid.Column="8" Content="SETUP" />
            </Grid>

        </controls:BeveledBorder>

        <!-- Tab Bar -->
        <StackPanel 
            Grid.Column="1"
            Grid.Row="2"
            Orientation="Horizontal"
            Margin="2">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
                    <Setter Property="Margin" Value="0,0,2,0"/>
                    <Setter Property="Width" Value="48" />
                </Style>
            </StackPanel.Resources>
            
            <Button IsEnabled="False" Content="DEPS"/>
            <Button Content="COORD"/>
            <Button Content="DESQ"/>

            <ItemsControl ItemsSource="{Binding SelectedAirport.Sectors}" Name="SectorList">
                <ItemsControl.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
                        <Setter Property="Width" Value="72" />
                    </Style>
                </ItemsControl.Resources>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Command="{Binding Path=DataContext.SelectSectorCommand, ElementName=SectorList}" CommandParameter="{Binding}" Content="{Binding Identifier}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <!-- Scroll Bar -->
        <!-- TODO: Not implemented -->
        <Grid Grid.Column="0" Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Button Grid.Row="0" Margin="0,1,0,1" IsEnabled="False">
                <controls:Chevron Direction="Up" />
            </Button>
            <Button Grid.Row="1" Margin="0,1,0,1" Background="{x:Static local:Theme.SelectedButtonColor}"/>
            <Button Grid.Row="2" Margin="0,1,0,0" IsEnabled="False">
                <controls:Chevron Direction="Down" />
            </Button>
        </Grid>

        <!-- Ladder -->
        <Canvas
            Grid.Column="1"
            Grid.Row="3"
            Name="LadderCanvas" 
            Margin="1"
            ClipToBounds="True" />

        <!-- Footer -->
        <Grid Grid.Column="1" Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Right" Margin="0,0,6,0">
                <TextBlock TextAlignment="Right">All Runways</TextBlock>
                <ItemsControl HorizontalAlignment="Right" ItemsSource="{Binding Path=LeftFeederFixes}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" Style="{StaticResource TextBaseStyle}" Margin="6,0,0,0"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>

            <controls:BeveledBorder Grid.Column="1" BevelType="Outline" BorderThickness="{x:Static local:Theme.BeveledBorderThickness}">
                <TextBlock x:Name="ClockText" TextAlignment="Center" VerticalAlignment="Center" Foreground="{x:Static local:Theme.InteractiveTextColor}"/>
            </controls:BeveledBorder>

            <StackPanel Grid.Column="2" HorizontalAlignment="Left" Margin="12,0,0,0">

                <TextBlock>All Runways</TextBlock>
                <ItemsControl Grid.Column="2" ItemsSource="{Binding Path=RightFeederFixes}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" Style="{StaticResource TextBaseStyle}" Margin="0,0,12,0"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
