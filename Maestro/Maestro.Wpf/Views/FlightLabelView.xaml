<UserControl x:Class="Maestro.Wpf.Views.FlightLabelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModels="clr-namespace:Maestro.Wpf.ViewModels"
             xmlns:converters="clr-namespace:Maestro.Wpf.Converters"
             xmlns:views="clr-namespace:Maestro.Wpf.Views"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewModels:FlightLabelViewModel}"
             d:DesignHeight="16"
             d:DesignWidth="250">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Maestro.Wpf;component/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:MinutesConverter x:Key="MinutesConverter"/>
            <converters:StateToColorConverter x:Key="StateToColorConverter"/>
            <converters:DelayToColorConverter x:Key="DelayToColorConverter"/>
            
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource InteractiveTextStyle}" />
            
            <Style TargetType="{x:Type StackPanel}">

                <Setter Property="FlowDirection" Value="LeftToRight" />
                
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding LadderPosition, RelativeSource={RelativeSource AncestorType={x:Type views:FlightLabelView}}}"
                        Value="Left">
                        
                        <Setter Property="FlowDirection" Value="RightToLeft" />
                        
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Border>
        <StackPanel Orientation="Horizontal">
        
            <TextBlock 
                Text="{Binding FlightViewModel.ScheduledLandingTime, Converter={StaticResource MinutesConverter}}"
                Width="24" />
        
            <TextBlock 
                Text="{Binding FlightViewModel.AssignedRunway}"
                Width="32" />
        
            <TextBlock
                Text="{Binding FlightViewModel.Callsign}"
                Foreground="{Binding FlightViewModel.State, Converter={StaticResource StateToColorConverter}}"
                Width="88"/>
        
            <!-- TODO: 250kts indicator-->
        
            <TextBlock
                Text="{Binding FlightViewModel.InitialDelay, Converter={StaticResource MinutesConverter}}"
                Foreground="{Binding FlightViewModel.InitialDelay, Converter={StaticResource DelayToColorConverter}}"
                Width="32" 
                FlowDirection="LeftToRight" />

            <TextBlock 
                Text="{Binding FlightViewModel.CurrentDelay, Converter={StaticResource MinutesConverter}}"
                Foreground="{Binding FlightViewModel.CurrentDelay, Converter={StaticResource DelayToColorConverter}}"
                Width="32"
                FlowDirection="LeftToRight" />
        
        </StackPanel>
        
        <Border.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Information" Command="{Binding ShowInformationWindowCommand}" />
                <MenuItem Header="Recompute" Command="{Binding RecomputeCommand}" IsEnabled="False"/>
                <MenuItem Header="Change Runway">
                    <ItemsControl ItemsSource="{Binding RunwayModeViewModel.Runways}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <MenuItem
                                    Header="{Binding Identifier}"
                                    Command="{Binding Path=DataContext.ChangeRunwayCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                    CommandParameter="{Binding Identifier}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </MenuItem>
                <MenuItem Header="Insert Flight" IsEnabled="False">
                    <MenuItem Header="Before" Command="{Binding InsertFlightBeforeCommand}" />
                    <MenuItem Header="After" Command="{Binding InsertFlightAfterCommand}" />
                </MenuItem>
                <MenuItem Header="Insert Slot" IsEnabled="False">
                    <MenuItem Header="Before" Command="{Binding InsertSlotBeforeCommand}"/>
                    <MenuItem Header="After" Command="{Binding InsertSlotAfterCommand}"/>
                </MenuItem>
                <MenuItem Header="Change ETA FF" Command="{Binding ChangeEtaCommand}" IsEnabled="False" />
                <MenuItem Header="Remove" Command="{Binding RemoveCommand}" IsEnabled="False" />
                <MenuItem Header="Desequence" Command="{Binding DesequenceCommand}" IsEnabled="False" />
                <MenuItem Header="Make Pending" Command="{Binding MakePendingCommand}" IsEnabled="False" />
                <MenuItem Header="Zero Delay" Command="{Binding ZeroDelayCommand}" IsEnabled="False" />
                <MenuItem Header="Coordination" Command="{Binding CoordinationCommand}" IsEnabled="False" />
            </ContextMenu>
        </Border.ContextMenu>
    </Border>
</UserControl>
